Ques 1:  find the output if we change the value of var in the module, imported in the main file.

Ans:      myModule.js
      let myVar = 'original';
         module.exports = {
          myVar
};

           main.js
const module = require('./myModule');
console.log(module.myVar); 
module.myVar = 'changed'; 
console.log(module.myVar);

Ques 2:  Find the difference b/w Asynchronous and synchronous, strict and non -strict in mjs.

Ans:           Synchronous Code
     Executes line by line, blocking the thread until each operation is complete.
     Each line waits for the previous one to finish.

       console.log('Start');
       console.log('Middle');
       console.log('End');

                 Asynchronous Code
let the program continue without waiting for certain operations.
It is Often used with setTimeout, Promise, async/await, etc.

  console.log('Start');
  setTimeout(() => {
  console.log('Inside Timeout');
}, 0);
console.log('End');

                     Strict Mode
Prevents the use of bad practices.
Introduced with 'use strict' in .js files.

     undeclaredVar = 5; 
     console.log(undeclaredVar);

                    Non-Strict Mode
Available in old-style scripts.
Allows bad practices, e.g., assigning undeclared variables.

       undeclaredVar = 5;
       console.log(undeclaredVar);


Ques 3:  Find the difference b/w writing myName and myName:myName in module export.

Ans:     const myName = 'Suraj';
        module.exports = {
      myName: myName
};

const nameValue = 'Alice';
module.exports = {
  myName: nameValue 
};


